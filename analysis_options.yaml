# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    - prefer_single_quotes
analyzer:
  errors:
    prefer_single_quotes: warning


# linter:
#   rules:
#     - camel_case_types
#     - camel_case_extensions
#     - avoid_init_to_null
#     - avoid_returning_null_for_void
#     - avoid_returning_this
#     - avoid_unnecessary_containers
#     - avoid_print
#     - avoid_empty_else
#     - avoid_relative_lib_imports
#     - unnecessary_const
#     - unnecessary_new
#     - unnecessary_lambdas
#     - prefer_initializing_formals
#     - prefer_function_declarations_over_variables
#     - prefer_void_to_null
#     - curly_braces_in_flow_control_structures
#     - cancel_subscriptions
#     - control_flow_in_finally
#     - empty_statements
#     - invariant_booleans
#     - directives_ordering
#     - empty_constructor_bodies
#     - no_duplicate_case_values
#     - annotate_overrides
#     - sized_box_for_whitespace
#     - unnecessary_null_in_if_null_operators
# analyzer:
#   errors:
#     camel_case_types: warning
#     camel_case_extensions: warning
#     avoid_init_to_null: warning
#     avoid_returning_null_for_void: warning
#     avoid_returning_this: warning
#     avoid_unnecessary_containers: warning
#     avoid_print: error
#     avoid_relative_lib_imports: warning
#     avoid_empty_else: warning
#     unnecessary_const: warning
#     unnecessary_new: warning
#     unnecessary_lambdas: warning
#     prefer_initializing_formals: warning
#     prefer_function_declarations_over_variables: warning
#     prefer_void_to_null: warning
#     prefer_if_null_operators: warning
#     curly_braces_in_flow_control_structures: warning
#     cancel_subscriptions: warning
#     control_flow_in_finally: warning
#     empty_statements: warning
#     invariant_booleans: warning
#     directives_ordering: warning
#     empty_constructor_bodies: warning
#     no_duplicate_case_values: warning
#     annotate_overrides: warning
#     sized_box_for_whitespace: ignore
#     unnecessary_null_in_if_null_operators: warning